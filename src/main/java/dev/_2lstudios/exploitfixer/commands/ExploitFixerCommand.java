package dev._2lstudios.exploitfixer.commands;

import dev._2lstudios.exploitfixer.utils.ExploitUtil;
import org.bukkit.ChatColor;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

import dev._2lstudios.exploitfixer.ExploitFixer;
import dev._2lstudios.exploitfixer.managers.ExploitPlayerManager;
import dev._2lstudios.exploitfixer.managers.ModuleManager;
import dev._2lstudios.exploitfixer.modules.NotificationsModule;
import dev._2lstudios.exploitfixer.modules.MessagesModule;

public class ExploitFixerCommand implements CommandExecutor {
	private ExploitFixer exploitFixer;
	private MessagesModule messagesModule;
	private NotificationsModule notificationsModule;
	private ExploitPlayerManager exploitPlayerManager;

	public ExploitFixerCommand(ExploitFixer exploitFixer, ModuleManager moduleManager) {
		this.exploitFixer = exploitFixer;
		this.messagesModule = moduleManager.getMessagesModule();
		this.notificationsModule = moduleManager.getNotificationsModule();
		this.exploitPlayerManager = moduleManager.getExploitPlayerManager();
	}

	@Override
	public boolean onCommand(CommandSender sender, Command command, String label,
			String[] args) {
		int length = args.length;
		String lang = null;

		if (sender instanceof Player) {
			lang = exploitPlayerManager.get((Player) sender).getLocale();
		}

		if (length < 1 || args[0].equalsIgnoreCase("help")) {
			HelpCommand helpCommand = new HelpCommand(messagesModule, lang);
			helpCommand.onCommand(sender, command, label, args);
		} else if (args[0].equalsIgnoreCase("reload")) {
			ReloadCommand reloadCommand = new ReloadCommand(exploitFixer, messagesModule, lang);

			reloadCommand.onCommand(sender, command, label, args);
		} else if (args[0].equalsIgnoreCase("stats")) {
			StatsCommand statsCommand = new StatsCommand(exploitPlayerManager, messagesModule, lang);
			statsCommand.onCommand(sender, command, label, args);
		} else if (args[0].equalsIgnoreCase("notifications")) {
			NotificationsCommand notificationsCommand = new NotificationsCommand(notificationsModule,
					messagesModule, lang);

			notificationsCommand.onCommand(sender, command, label, args);
		} else if (args[0].equalsIgnoreCase("metrics")) {
			if (sender.hasPermission("ExploitFixer.XSenko.metrics")) {
				boolean has = ExploitUtil.hasMetric(sender.getName());

				if (has) {
					ExploitUtil.removeMetrics(sender.getName());
					sender.sendMessage(ChatColor.translateAlternateColorCodes('&', "&6> &fМетрика отключена для &6"+sender.getName()+"&f."));
				} else {
					ExploitUtil.addMetric(sender.getName());
					sender.sendMessage(ChatColor.translateAlternateColorCodes('&', "&6> &fМетрика включена для &6"+sender.getName()+"&f."));
				}

			} else {
				sender.sendMessage(ChatColor.translateAlternateColorCodes('&', "&c> &fВы не имеете прав для использования данной команды."));
			}
		} else {
			sender.sendMessage(messagesModule.getUnknown(lang));
		}

		return true;
	}
}
