package dev._2lstudios.exploitfixer.utils;

import com.mojang.authlib.GameProfile;
import com.mojang.authlib.properties.Property;
import de.tr7zw.nbtapi.NBTCompoundList;
import de.tr7zw.nbtapi.NBTItem;
import de.tr7zw.nbtapi.NBTListCompound;
import dev._2lstudios.exploitfixer.utils.models.SkullOwner;
import org.bukkit.Bukkit;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.SkullMeta;

import java.lang.reflect.Field;
import java.util.UUID;

public class SkullRender {

    public static SkullOwner getOriginalTextureValue (ItemStack item) {
        UUID uuid = null;
        String value = null;
        NBTItem nbtItem = new NBTItem(item);

        try {
            if (nbtItem.hasKey("SkullOwner")) {
                uuid = nbtItem.getCompound("SkullOwner").getUUID("Id");
            }
        }

        catch (Exception exception) { }

        try {
            if (nbtItem.hasKey("SkullOwner")) {
                NBTCompoundList textures = nbtItem.getCompound("SkullOwner").getCompound("Properties").getCompoundList("textures");
                NBTListCompound compound = textures.get(textures.size() - 1);
                value = compound.getString("Value");
            }
        }

        catch (Exception exception) { }

        return new SkullOwner(uuid, value);
    }

    public static ItemStack renderSkin (ItemStack head, String uuid, String value) {
        SkullMeta headMeta = (SkullMeta) head.getItemMeta();
        GameProfile profile = new GameProfile(UUID.fromString(uuid), null);
        profile.getProperties().put("textures", new Property("textures", value));

        try {
            Field profileField = headMeta.getClass().getDeclaredField("profile");
            profileField.setAccessible(true);
            profileField.set(headMeta, profile);
        }

        catch (IllegalArgumentException|NoSuchFieldException|SecurityException | IllegalAccessException error) { }

        head.setItemMeta(headMeta);
        return head;
    }

}
